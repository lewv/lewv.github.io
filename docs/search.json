[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This site was produced with WebR and Quarto in RStudio and is currently hosted by GitHub. It was created for the students of Statistics & Data Science 101A.\nLecture 1: Let’s start with a quick R Refresher https://lewv.github.io/RRefresher.html\nLecture 2: And professional story telling with data"
  },
  {
    "objectID": "holten.html",
    "href": "holten.html",
    "title": "Holten Project",
    "section": "",
    "text": "tl;dr\nHer project may be more suitable for a Stat 140XP team than a Stat 141XP team. She is having data issues with BruinLearn so has a smaller (1,119 observation 5 variable set from Summer 2023) instead of full set with additional information\n\n\nRecall\nWe met with Christine Holten at the Faculty Center in November. She’s with the writing program. It turns out that we cannot access any of her data on BruinLearn (maybe in the future, but the tools don’t exist right now)\n\n\nHer questions\n\nWhat is the correlation between our placement and students’ course preference – Can we rely on the students’ course preference selection alone to get similar placement result patterns as we get when we ourselves place students based on the reading/writing essay that they complete? Or asked in a different way, when can we rely on students’ course preference selections to get similar placement patterns as we get when we place students ourselves? When can we not rely on their course selections?\n\ncorrelation between students’ post-AWPE survey scores, students’ course preference, and our placement of students – When can we rely on students’ course preferences in combination with their post-AWPE survey results to give us similar placement result patterns as when we ourselves place students based on the reading/writing essay?\n\ncorrelation between student our placement, student course preference, post-AWPE survey scores and unweighted GPA – Can unweighted GPA serve as an independent measure to help us determine when to accept students’ course preference & survey results and when not to accept students’ course preference and place them ourselves?\n\n\n\nHer data\nThey do keep some data outside of BruinLearn, here are 1,119 student results from last summer:\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nDocumentation\n\n(omitted) Column A – UID\n\nColumn B – ENG COMP Placement (that is the English composition course our raters placed them in – the possible placements are:\n\n\nEnglish Comp. 1 (Entry Level Writing course – students need to take EC 1 and 2 before Writing I)\nEnglish Comp. 2 (Entry Level Writing course – students need to take EC 2 before Writing I)\nEnglish Comp. 1B (Entry Level Writing course for multilingual writers – students need to take EC 1B and 2i before Writing I)\nEnglish Comp. 2i (Entry Level Writing course for multilingual writers – students need to take EC 2i before Writing I)\nEnglish Comp. 3 (Writing I)\n\n\n\nColumn C – Course Preference (that is the English composition course the student chose for themselves)\n\nColumn D – Post-AWPE Survey (the highest score is 54 – there were 18 questions on the survey with a choice of A - 1 pt., B - 2 pts., C - 3 pts.)\n\nColumn E – H/L/A – this indicates whether the students course preference was higher/accurate/lower than where we placed them\n\nColumn F – unweighted GPA (this is the student’s self-reported high school GPA, which we obtained from Admissions) – we are hoping to use this as an independent measure\n\n\n\nOne Way Tables\nHer data is a little “dirty” Column B (actual Writing program placement) and Column C (self-placement) have different values. Column D I think she means the possible is 54, the high score according to her data is 48.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nTwo Way Tables\nI wanted to check B and C crossed for each level of Column E (H/L/A):\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nThey seem to be accurate a little over 50% of the time"
  },
  {
    "objectID": "computations-complete.html",
    "href": "computations-complete.html",
    "title": "Think about it",
    "section": "",
    "text": "Please enable JavaScript to experience the dynamic code cell content on this page.\nThe data:\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nThe plots\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWhat it we wanted to model it?\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "the future starts now",
    "section": "",
    "text": "This is a Quarto website hosted by GitHub and utlizes WebR. This combination allows you to run R code in the browser without the need for an R server to execute the code.\nStatistics 101A: https://lewv.github.io/about.html\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\nTo learn more about WebR visit https://docs.r-wasm.org/webr/latest/\nBut I learned the most from this user: https://github.com/coatless/quarto-webr"
  },
  {
    "objectID": "RRefresher.html",
    "href": "RRefresher.html",
    "title": "R Refresher",
    "section": "",
    "text": "This is an R Refresher adapted from Weisberg (2014) We will use packages alr4, ggplot2, dplyr and tidyr"
  },
  {
    "objectID": "RRefresher.html#examples",
    "href": "RRefresher.html#examples",
    "title": "R Refresher",
    "section": "Examples",
    "text": "Examples\nThe normal distribution’s root is “norm”. The function pnorm() takes a quantile and returns a probability of observing a value less than or equal to 1.96 in a standard normal distribution:\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWe can change the pnorm defaults to accommodate a different situation, here, SAT scores combined math/verbal:\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nqnorm() answers the question - given a probability what is the value of the associated quantile?\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\ndnorm() - returns the height of the probability density function at points specified by the programmer. In the normal distribution, points farther from the mean have lower density\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nThere are other distributions with different root names, but the same four letter identifier holds\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nadditional density example\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nPlease try generating values from another distribution (e.g., F, Poisson), you can find a longer list of distributions here: https://stat.ethz.ch/R-manual/R-devel/library/stats/html/Distributions.html\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "RRefresher.html#dim",
    "href": "RRefresher.html#dim",
    "title": "R Refresher",
    "section": "dim()",
    "text": "dim()\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "RRefresher.html#head",
    "href": "RRefresher.html#head",
    "title": "R Refresher",
    "section": "head()",
    "text": "head()\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "RRefresher.html#summary",
    "href": "RRefresher.html#summary",
    "title": "R Refresher",
    "section": "summary()",
    "text": "summary()\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nSummary is being abused here. While it is fast and gives us the count of NA (missing), do consider that rounding error could occur for the summary statistics. Functions for computing stats like mean( ) can be found elsewhere:"
  },
  {
    "objectID": "RRefresher.html#descriptive-basics",
    "href": "RRefresher.html#descriptive-basics",
    "title": "R Refresher",
    "section": "descriptive basics",
    "text": "descriptive basics\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "RRefresher.html#conditioninggrouping",
    "href": "RRefresher.html#conditioninggrouping",
    "title": "R Refresher",
    "section": "conditioning/grouping",
    "text": "conditioning/grouping\nWe will use more of this later in the course, but for now, you should possess this basic skill:\n\nin base R\nWe could use some basic character manipulation to make the result a little more compact.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nusing dplyr with a little tidyr\nThis is a preferred alternative because (1) it has more options and (2) you don’t lose as much information. First some data preparation, similar to the base R solution\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nIf we were to stop after the summarize() we would have a “long”/“tall” result suitable for ggplot and other functions. By using ungroup() and a pivot_wider (from tidyr) we arrive at a comparable outcome, notice the missing categories:\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWe will delve into more data handling later."
  }
]